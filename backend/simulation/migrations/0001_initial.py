# Generated by Django 5.2 on 2025-05-29 21:55

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("agents", "0001_initial"),
        ("assistants", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="SimulationClusterStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cluster_name", models.CharField(max_length=150)),
                ("phase", models.CharField(max_length=50)),
                ("entropy_level", models.FloatField(default=0.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="SimulationConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150)),
                ("assistant_ids", models.JSONField()),
                ("scenario_description", models.TextField()),
                ("parameters", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="SwarmReflectionThread",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=150)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="CinemythStoryline",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("storyline_title", models.CharField(max_length=150)),
                ("act_structure", models.JSONField()),
                ("codex_alignment_vector", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "authored_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="assistants.assistant",
                    ),
                ),
                (
                    "memory_sources",
                    models.ManyToManyField(to="agents.swarmmemoryentry"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CodexSimulationScenario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150)),
                ("mutated_clauses", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "baseline_codex",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="simulation_scenarios",
                        to="agents.swarmcodex",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DreamframeStoryGenerator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ritual_resonance_tags", models.JSONField()),
                ("output_script", models.TextField()),
                ("symbolic_style", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "assistant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="assistants.assistant",
                    ),
                ),
                (
                    "seed_codex",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="agents.swarmcodex",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MultiUserNarrativeLab",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("lab_title", models.CharField(max_length=150)),
                ("participant_ids", models.JSONField()),
                ("narrative_threads", models.JSONField()),
                ("symbolic_experiments", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "assistant_mediators",
                    models.ManyToManyField(to="assistants.assistant"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MythflowPlaybackSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_id", models.CharField(max_length=150)),
                ("playback_sequence", models.JSONField()),
                ("reflective_summary", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "assistant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="assistants.assistant",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MythflowSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_name", models.CharField(max_length=150)),
                ("session_status", models.CharField(default="active", max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("live_codex_context", models.ManyToManyField(to="agents.swarmcodex")),
                ("memory_trace", models.ManyToManyField(to="agents.swarmmemoryentry")),
                ("participants", models.ManyToManyField(to="assistants.assistant")),
            ],
        ),
        migrations.CreateModel(
            name="MythflowReflectionLoop",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("triggered_by", models.CharField(max_length=100)),
                ("loop_reflections", models.TextField()),
                ("belief_realignment_score", models.FloatField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "involved_assistants",
                    models.ManyToManyField(to="assistants.assistant"),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="simulation.mythflowsession",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MythgraphNode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("node_type", models.CharField(max_length=50)),
                ("label", models.CharField(max_length=150)),
                ("metadata", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "assistant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="assistants.assistant",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MythgraphEdge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("relation", models.CharField(max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="outgoing_edges",
                        to="simulation.mythgraphnode",
                    ),
                ),
                (
                    "target",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="incoming_edges",
                        to="simulation.mythgraphnode",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AssistantMythgraphDraft",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "assistant",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="assistants.assistant",
                    ),
                ),
                (
                    "edges",
                    models.ManyToManyField(
                        related_name="drafts", to="simulation.mythgraphedge"
                    ),
                ),
                (
                    "nodes",
                    models.ManyToManyField(
                        related_name="drafts", to="simulation.mythgraphnode"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MythScenarioSimulator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("simulation_title", models.CharField(max_length=150)),
                ("selected_archetypes", models.JSONField()),
                ("narrative_goals", models.TextField()),
                ("simulation_outcome", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "initiating_entity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="assistants.assistant",
                    ),
                ),
                ("memory_inputs", models.ManyToManyField(to="agents.swarmmemoryentry")),
            ],
        ),
        migrations.AddField(
            model_name="mythflowsession",
            name="active_scenario",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="simulation.mythscenariosimulator",
            ),
        ),
        migrations.CreateModel(
            name="NarrativeMutationTrace",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mutation_input", models.JSONField()),
                ("divergence_output", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "assistant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="assistants.assistant",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PersonalRitualGuide",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_id", models.CharField(max_length=150)),
                ("personalized_steps", models.JSONField()),
                ("codex_alignment_score", models.FloatField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "assistant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="assistants.assistant",
                    ),
                ),
                (
                    "ritual_blueprint",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="agents.encodedritualblueprint",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PromptCascadeLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("prompt_id", models.CharField(max_length=100)),
                ("cascade_path", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "triggered_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="assistants.assistant",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CascadeNodeLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tool_invoked", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "assistant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="assistants.assistant",
                    ),
                ),
                (
                    "thought_log",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="assistants.assistantthoughtlog",
                    ),
                ),
                (
                    "cascade",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nodes",
                        to="simulation.promptcascadelog",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PurposeLoopCinematicEngine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("loop_condition", models.TextField()),
                ("symbolic_entropy_threshold", models.FloatField()),
                ("convergence_detected", models.BooleanField(default=False)),
                ("completed_cycles", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "linked_storyline",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="simulation.cinemythstoryline",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReflectiveTheaterSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("viewer_identity", models.CharField(max_length=150)),
                ("codex_interaction_log", models.TextField()),
                ("symbolic_mood_map", models.JSONField()),
                ("reflection_rating", models.FloatField(null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "active_cinemyth",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="simulation.cinemythstoryline",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RitualDriftObservation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("entropy_score", models.FloatField(default=0.0)),
                ("clause_mismatch", models.FloatField(default=0.0)),
                ("observed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "ritual_blueprint",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="agents.encodedritualblueprint",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DriftCorrectionProposal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("suggested_update", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "observation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="proposals",
                        to="simulation.ritualdriftobservation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RitualInteractionEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("trigger_method", models.CharField(max_length=100)),
                ("reflection_notes", models.TextField(blank=True)),
                ("belief_impact_score", models.FloatField(default=0.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "assistant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="assistants.assistant",
                    ),
                ),
                (
                    "memory_write_back",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="agents.swarmmemoryentry",
                    ),
                ),
                (
                    "ritual_blueprint",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="agents.ritualblueprint",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SceneControlEngine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("scene_title", models.CharField(max_length=150)),
                ("active_roles", models.JSONField()),
                ("symbolic_scene_state", models.JSONField()),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("codex_constraints", models.ManyToManyField(to="agents.swarmcodex")),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="simulation.mythflowsession",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SceneDirectorFrame",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbolic_adjustments", models.JSONField()),
                ("role_reassignments", models.JSONField()),
                ("final_scene_notes", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "director_assistant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="assistants.assistant",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="simulation.mythflowsession",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SimScenarioEngine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("scenario_title", models.CharField(max_length=150)),
                ("symbolic_inputs", models.JSONField()),
                ("user_paths", models.JSONField()),
                ("codex_alterations", models.JSONField()),
                ("ritual_outcomes", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "host_assistant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="assistants.assistant",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SimulatedBeliefFork",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("divergence_summary", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "originating_assistant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="assistants.assistant",
                    ),
                ),
                (
                    "scenario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="belief_forks",
                        to="simulation.codexsimulationscenario",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SimulationGridNode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("alignment_drift", models.FloatField(default=0.0)),
                ("progress", models.FloatField(default=0.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "assistant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="assistants.assistant",
                    ),
                ),
                (
                    "cluster",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nodes",
                        to="simulation.simulationclusterstatus",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SimulationRunLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.CharField(max_length=50)),
                ("log_details", models.TextField(blank=True)),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="simulation.simulationconfig",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SimulationStateTracker",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbolic_state_snapshot", models.JSONField()),
                ("role_drift_detected", models.BooleanField(default=False)),
                ("codex_alignment_score", models.FloatField()),
                ("memory_deltas", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "simulator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="simulation.mythscenariosimulator",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SwarmClauseDriftMetric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("clause_index", models.IntegerField()),
                ("drift_score", models.FloatField(default=0.0)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "scenario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="drift_metrics",
                        to="simulation.codexsimulationscenario",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SwarmReflectionPlaybackLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timeline", models.JSONField()),
                ("tag", models.CharField(blank=True, max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "assistant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="assistants.assistant",
                    ),
                ),
                (
                    "thread",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="simulation.swarmreflectionthread",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SymbolicDialogueExchange",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message_content", models.TextField()),
                ("symbolic_intent", models.JSONField()),
                ("codex_alignment_score", models.FloatField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="assistants.assistant",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="simulation.mythflowsession",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SymbolicDialogueScript",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=150)),
                ("narrative_context", models.TextField()),
                ("dialogue_sequence", models.JSONField()),
                ("archetype_tags", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="assistants.assistant",
                    ),
                ),
                (
                    "codex_link",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="agents.swarmcodex",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MemoryDecisionTreeNode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbolic_condition", models.TextField()),
                ("decision_options", models.JSONField()),
                ("resulting_path", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "memory_reference",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="agents.swarmmemoryentry",
                    ),
                ),
                (
                    "script",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="simulation.symbolicdialoguescript",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SymbolicMilestoneLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_id", models.CharField(max_length=150)),
                ("milestone_type", models.CharField(max_length=100)),
                ("reflection_notes", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "assistant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="assistants.assistant",
                    ),
                ),
                (
                    "codex_context",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="agents.swarmcodex",
                    ),
                ),
                (
                    "related_memory",
                    models.ManyToManyField(to="agents.swarmmemoryentry"),
                ),
            ],
        ),
    ]
