# Generated by Django 5.2 on 2025-05-21 21:19
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("agents", "__first__"),
        ("assistants", "__first__"),
    ]

    operations = [
        migrations.CreateModel(
            name="SimulationConfig",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=150)),
                ("assistant_ids", models.JSONField()),
                ("scenario_description", models.TextField()),
                ("parameters", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="SimulationRunLog",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("status", models.CharField(max_length=50)),
                ("log_details", models.TextField(blank=True)),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("config", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="simulation.simulationconfig")),
            ],
        ),
        migrations.CreateModel(
            name="MythScenarioSimulator",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("simulation_title", models.CharField(max_length=150)),
                ("selected_archetypes", models.JSONField()),
                ("narrative_goals", models.TextField()),
                ("simulation_outcome", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("initiating_entity", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="assistants.assistant")),
                ("memory_inputs", models.ManyToManyField(to="agents.SwarmMemoryEntry")),
            ],
        ),
        migrations.CreateModel(
            name="RitualInteractionEvent",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("trigger_method", models.CharField(max_length=100)),
                ("reflection_notes", models.TextField(blank=True)),
                ("belief_impact_score", models.FloatField(default=0.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("assistant", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="assistants.assistant")),
                ("memory_write_back", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="agents.SwarmMemoryEntry")),
                ("ritual_blueprint", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="agents.ritualblueprint")),
            ],
        ),
        migrations.CreateModel(
            name="SimulationStateTracker",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("symbolic_state_snapshot", models.JSONField()),
                ("role_drift_detected", models.BooleanField(default=False)),
                ("codex_alignment_score", models.FloatField()),
                ("memory_deltas", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("simulator", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="simulation.mythscenariosimulator")),
            ],
        ),
        migrations.CreateModel(
            name="CinemythStoryline",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("storyline_title", models.CharField(max_length=150)),
                ("act_structure", models.JSONField()),
                ("codex_alignment_vector", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("authored_by", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="assistants.assistant")),
                ("memory_sources", models.ManyToManyField(to="agents.SwarmMemoryEntry")),
            ],
        ),
        migrations.CreateModel(
            name="MythflowSession",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("session_name", models.CharField(max_length=150)),
                ("session_status", models.CharField(default="active", max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("active_scenario", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="simulation.mythscenariosimulator")),
                ("live_codex_context", models.ManyToManyField(to="agents.SwarmCodex")),
                ("memory_trace", models.ManyToManyField(to="agents.SwarmMemoryEntry")),
                ("participants", models.ManyToManyField(to="assistants.Assistant")),
            ],
        ),
        migrations.CreateModel(
            name="PurposeLoopCinematicEngine",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("loop_condition", models.TextField()),
                ("symbolic_entropy_threshold", models.FloatField()),
                ("convergence_detected", models.BooleanField(default=False)),
                ("completed_cycles", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("linked_storyline", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="simulation.cinemythstoryline")),
            ],
        ),
        migrations.CreateModel(
            name="ReflectiveTheaterSession",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("viewer_identity", models.CharField(max_length=150)),
                ("codex_interaction_log", models.TextField()),
                ("symbolic_mood_map", models.JSONField()),
                ("reflection_rating", models.FloatField(null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("active_cinemyth", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="simulation.cinemythstoryline")),
            ],
        ),
        migrations.CreateModel(
            name="SymbolicDialogueExchange",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("message_content", models.TextField()),
                ("symbolic_intent", models.JSONField()),
                ("codex_alignment_score", models.FloatField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("sender", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="assistants.assistant")),
                ("session", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="simulation.mythflowsession")),
            ],
        ),
        migrations.CreateModel(
            name="SymbolicDialogueScript",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=150)),
                ("narrative_context", models.TextField()),
                ("dialogue_sequence", models.JSONField()),
                ("archetype_tags", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("author", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="assistants.assistant")),
                ("codex_link", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="agents.swarmcodex")),
            ],
            options={"ordering": ["-created_at"]},
        ),
        migrations.CreateModel(
            name="MemoryDecisionTreeNode",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("symbolic_condition", models.TextField()),
                ("decision_options", models.JSONField()),
                ("resulting_path", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("memory_reference", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="agents.swarmmemoryentry")),
                ("script", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="simulation.symbolicdialoguescript")),
            ],
            options={"ordering": ["-created_at"]},
        ),
        migrations.CreateModel(
            name="MythflowReflectionLoop",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("triggered_by", models.CharField(max_length=100)),
                ("loop_reflections", models.TextField()),
                ("belief_realignment_score", models.FloatField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("involved_assistants", models.ManyToManyField(to="assistants.Assistant")),
                ("session", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="simulation.mythflowsession")),
            ],
            options={"ordering": ["-created_at"]},
        ),
        migrations.CreateModel(
            name="SceneControlEngine",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("scene_title", models.CharField(max_length=150)),
                ("active_roles", models.JSONField()),
                ("symbolic_scene_state", models.JSONField()),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("codex_constraints", models.ManyToManyField(to="agents.SwarmCodex")),
                ("session", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="simulation.mythflowsession")),
            ],
            options={"ordering": ["-last_updated"]},
        ),
        migrations.CreateModel(
            name="SceneDirectorFrame",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("symbolic_adjustments", models.JSONField()),
                ("role_reassignments", models.JSONField()),
                ("final_scene_notes", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("director_assistant", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="assistants.assistant")),
                ("session", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="simulation.mythflowsession")),
            ],
            options={"ordering": ["-created_at"]},
        ),
    ]
