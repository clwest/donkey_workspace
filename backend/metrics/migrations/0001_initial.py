# Generated by Django 5.2 on 2025-06-12 05:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("agents", "0003_initial"),
        ("assistants", "0002_initial"),
        ("prompts", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CodexClauseComplianceMap",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("clause_id", models.CharField(max_length=200)),
                ("compliance_ratio", models.FloatField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="CodexClauseVote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("clause_id", models.CharField(max_length=200)),
                ("suggested_mutation", models.TextField()),
                ("symbolic_tags", models.JSONField(default=list)),
                ("vote_choice", models.CharField(max_length=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="RitualReputationScore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ritual_name", models.CharField(max_length=150)),
                ("symbolic_tags", models.JSONField(default=list)),
                ("rating", models.FloatField()),
                ("assistant_approval_ratio", models.FloatField()),
                ("drift_reduction_effectiveness", models.FloatField()),
                ("outcome_quality", models.FloatField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="SwarmAlignmentIndex",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.FloatField()),
                ("details", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="AssistantBeliefVector",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("vector", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "assistant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="assistants.assistant",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PerformanceMetric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("value", models.FloatField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "assistant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="assistants.assistant",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PromptVersionTrace",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("feedback_score", models.FloatField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "previous",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="metrics.promptversiontrace",
                    ),
                ),
                (
                    "prompt",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="version_traces",
                        to="prompts.prompt",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RitualPerformanceMetric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbolic_score", models.FloatField()),
                ("transformation_alignment", models.FloatField()),
                ("mythic_tags", models.JSONField()),
                ("reflection_notes", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "assistant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="assistants.assistant",
                    ),
                ),
                (
                    "ritual",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="agents.ritualarchiveentry",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SwarmTaskCluster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150)),
                ("summary", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "tasks",
                    models.ManyToManyField(
                        related_name="task_clusters",
                        to="assistants.assistanttaskrunlog",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TaskEvolutionSuggestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("suggestion_text", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "run_log",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="evolution_suggestions",
                        to="assistants.assistanttaskrunlog",
                    ),
                ),
            ],
        ),
    ]
